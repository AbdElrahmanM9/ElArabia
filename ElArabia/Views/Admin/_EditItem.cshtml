@model ElArabia.ViewModel.CheeseViewModel
@{
    ViewBag.Title = "Edit New Product";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2 class="my-3">Edit New Product</h2>

@using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "AddForm" }))
{
    @Html.AntiForgeryToken()

    <div class="bd-example5 my-5" id="ItemsTable">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NameAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameAr, "", new { @class = "text-danger NameAr" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameEn, "", new { @class = "text-danger NameEn" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="upload" class="control-label col-md-4 subscribe btn btn-light btn-lg btn-block" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger Description" })
            </div>
        </div>        
        <div class="form-group">
            @Html.LabelFor(model => model.Prepare, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prepare, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prepare, "", new { @class = "text-danger Prepare" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-1">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            <div class="col-md-offset-2 col-md-10 my-2">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}



<script>
    function Save() {
        debugger;
        var form = $('#AddForm').serializeArray(); // You need to use standard javascript object here
        var formData = new FormData();
        form.forEach(x => {
            formData.append(x.name, x.value);
        });
        formData.append('Image', $('#upload')[0].files[0]);
        console.log(form);
        debugger;
        $.ajax({
            url: '@Url.Action("AddNewItems", "Admin")',
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            method: 'POST',
            success: function (data) {
                debugger;
                $("#NameAr").val("");
                $("#NameEn").val("");
                $("#Image").val("");
                $("#Description").val("");
                $("#Prepare").val("");
                $("#Price").val("");
                $("#PriceCost").val("");
                $("#BrandId").val("");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) { }
        });

    }

</script>
